{
    "collab_server" : "",
    "contents" : "context(\"bootstrap arguments\")\ntest_that(\"check_matrix with ok vectors\", {\n  expect_true(check_data(matrix(1:9,3,3)))\n})\ntest_that(\"check_matrix fails with invalid argument\",{\n  expect_error(check_data(list(x=c(1:3),y=c(2:6))))\n  expect_error(check_data(matrix(c(\"a\",\"b\",\"c\",\"d\"),2,2)))\n})\ntest_that(\"check_sets with ok sets\", {\n  expect_true(check_sets(list(1:3,4:5)))\n  expect_true(check_sets(list(\"a\",\"b\")))\n})\ntest_that(\"check_sets with invalid argument\", {\n  expect_error(check_sets(list(1:3,\"c\")))\n})\ntest_that(\"check_ncomps with ok sets\", {\n  expect_true(check_ncomps(data=matrix(1:9,3,3),2))\n})\ntest_that(\"check_ncomps with invalid argument\", {\n  expect_error(check_ncomps(data=matrix(1:9,3,3),\"c\"))\n  expect_error(check_ncomps(data=matrix(1:9,3,3),c(1,2)))\n  expect_error(check_ncomps(data=matrix(1:9,3,3),4))\n})\ntest_that(\"check_numeric with ok vectors\", {\n  expect_true(check_numeric(matrix(1:9,3,3)))\n})\ntest_that(\"check_numeric fails with invalid argument\",{\n  expect_error(check_numeric(matrix(c(\"a\",\"b\",\"c\",\"d\"),2,2)))\n})\n\n\n",
    "created" : 1480462162440.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4165990509",
    "id" : "1EB93A1D",
    "lastKnownWriteTime" : 1480462700,
    "last_content_update" : 1480462700984,
    "path" : "~/Desktop/234 final/MFA/tests/testthat/test-bootstrap.R",
    "project_path" : "tests/testthat/test-bootstrap.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}